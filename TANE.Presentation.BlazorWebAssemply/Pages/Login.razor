@using TANE.Application.Common.Exceptions
@using TANE.Application.Groups.JwtTokens.Commands.Interfaces
@using TANE.Domain.Entities
@using TANE.Presentation.BlazorWebAssemply.Authentication


@inject CustomStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IJSRuntime JS


@page "/login"

<AuthorizeView>
    <Authorized>
        <p>Du er allerede logget ind</p>
    </Authorized>

    <NotAuthorized>
        <RadzenStack Gap="0" class="rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 400px; overflow: hidden;">
            <RadzenCard class="rz-shadow-0 rz-border-radius-0 rz-background-color-success-darker rz-p-12" style="text-align: center;">
                <RadzenText TextStyle="TextStyle.DisplayH3" TagName="TagName.H2" class="rz-color-on-success-darker rz-mb-0">Login</RadzenText>
            </RadzenCard>
            <RadzenCard class="rz-shadow-0 rz-p-12">
                <RadzenTemplateForm Context="NameForNoConflict" Data=@("SimpleLogin")>
                    <RadzenLogin AllowRegister="false" AllowResetPassword="false" UserText="Email" Username="Test" Password="Test1234!" Login="@(args => OnLogin(args))" />
                    <RadzenText class="mt-2">@ErrorMessage</RadzenText>
                </RadzenTemplateForm>
            </RadzenCard>
        </RadzenStack>
    </NotAuthorized>

    <Authorizing>
        <p>Checking auth state...</p>
    </Authorizing>

</AuthorizeView>




@code {


    public string ErrorMessage { get; set; } = string.Empty;

    private async Task OnLogin(LoginArgs args)
    {
        try
        {
            var token = await AuthStateProvider.LoginAsync(args.Username, args.Password);


            if (!string.IsNullOrWhiteSpace(token))
            {
               // 2) Gem token i localStorage
                await JS.InvokeVoidAsync("localStorage.setItem", "authToken", token);

    // 3) Naviger videre
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Login mislykkedes: Ingen token modtaget.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Login-fejl: {ex.Message}";
        }
    }

}

