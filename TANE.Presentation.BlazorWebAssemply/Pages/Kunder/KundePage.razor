@using TANE.Application.Groups.Kunder.Queries
@using TANE.Application.Groups.Kunder.Queries.Interfaces
@using TANE.Domain.Entities
@using TANE.Presentation.BlazorWebAssemply.Configuration
@using TANE.Presentation.BlazorWebAssemply.Pages.Kunder.Component
@inject IReadKunde ReadKunde
@inject CustomStateProvider AuthStateProvider

@page "/kunde/oversigt"

<PageTitle>Kundeoversigt</PageTitle>

<KundeListComponent InjectedKunder="Kunder"
OnEditKunde="OnRowEditPressed"
OnDeleteKunde="OnRowDeletePressed" />

@code {
    private string _token = string.Empty;
    public List<Kunde> Kunder { get; set; } = new();

    private void  OnRowEditPressed(Kunde kunde)
    {
        Console.WriteLine($"Edit pressed for: {kunde.Id}");
    }

    private  void OnRowDeletePressed(Kunde kunde)
    {
        Console.WriteLine($"Delete pressed for: {kunde.Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();if (authState.User.Identity.IsAuthenticated)
        {
            _token = AuthStateProvider.CurrentUser.Token;
        }
        else
        {
             // Handle unauthenticated state
            return;
        }
        await base.OnInitializedAsync();
        Kunder = await ReadKunde.GetAllKunderAsync(_token);
    }
}
