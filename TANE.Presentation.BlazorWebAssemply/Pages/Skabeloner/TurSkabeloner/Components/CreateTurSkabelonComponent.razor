@using System.Collections.ObjectModel
@using TANE.Domain.Entities
@using TANE.Presentation.BlazorWebAssemply.Configuration
@using TANE.Presentation.BlazorWebAssemply.Pages.Skabeloner.DagSkabeloner.Components
@using TANE.Presentation.BlazorWebAssemply.Pages.Skabeloner.TurSkabeloner.Components

<div class="rz-p-0 rz-p-md-12">
    
    @if (showAddDagSkabelon)
    {
        <DagSkabelonListComponent InjectedSkabeloner="DagSkabeloner" OnSelectSkabelon="OnDagSkabelonRowSelect"/>
    }

    @if (!showAddDagSkabelon)
    {
        <h4>Opret Ny Tur Skabelon</h4>
        <RadzenTemplateForm TItem="TurSkabelon" Data=@TurSkabelon Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
            <RadzenStack Gap="1rem" class="rz-p-sm-12">

                <RadzenFormField Text="Titel" Variant="@ThemeConfig.FormVariant">
                    <ChildContent>
                        <RadzenTextBox Name="Titel" @bind-Value=@TurSkabelon.Titel />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Titel" Text="Titel skal udfyldes." />
                    </Helper>
                </RadzenFormField>


                <RadzenFormField Text="Beskrivelse" Variant="@ThemeConfig.FormVariant">
                    <ChildContent>
                        <RadzenTextArea Name="Beskrivelse" @bind-Value="@TurSkabelon.Beskrivelse" Rows="4" />
                    </ChildContent>
                    <Helper>
                        <RadzenRequiredValidator Component="Beskrivelse" Text="Beskrivelse skal udfyldes." />
                    </Helper>
                </RadzenFormField>

                <br />

                <h4>Dage:</h4>
                <DagSkabelonReorderListComponent InjectedSkabeloner="ObservableDagSkabeloner" OnDeleteSkabelon="OnDagSkabelonDelete" />
                <div style="text-align: right; width: 100%;">
                    <RadzenButton ButtonType="ButtonType.Button" Size="ButtonSize.Medium" Style="width: 150px" Text="Tilføj Dag" Click="@(() => showAddDagSkabelon = !showAddDagSkabelon)"></RadzenButton>
                </div>

                <br />

                <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Text="Opret tur skabelon"></RadzenButton>
            </RadzenStack>
        </RadzenTemplateForm>
    }

</div>

@code{

    [Parameter, EditorRequired]
    public List<DagSkabelon> InjectedDagSkabeloner { get; set; } = new List<DagSkabelon>();

    bool showAddDagSkabelon = false;

    private ObservableCollection<DagSkabelon> SelectedDagSkabelonerVar = new ObservableCollection<DagSkabelon>();

    public ObservableCollection<DagSkabelon> ObservableDagSkabeloner
    {
        get
        {
            return SelectedDagSkabelonerVar;
        }
        set 
        { 
            SelectedDagSkabelonerVar = value;
        }
    }

    public TurSkabelon TurSkabelon { get; set; } = new TurSkabelon();

    private List<DagSkabelon> DagSkabelonerVar = new List<DagSkabelon>();

    public List<DagSkabelon> DagSkabeloner
    {
        get
        {
            // Return DagSkabelonerVar excluding entities already in ObservableDagSkabeloner
            return DagSkabelonerVar.Where(d => !ObservableDagSkabeloner.Any(o => o.Id == d.Id)).ToList();
        }
        set
        {
            DagSkabelonerVar = value;
        }
    }

    protected override void OnInitialized()
    {
        DagSkabeloner = InjectedDagSkabeloner;
    }

    void OnSubmit(TurSkabelon model)
    {
        TurSkabelon.DagSkabeloner = ObservableDagSkabeloner.ToList();

        Console.WriteLine($"Titel: {TurSkabelon.Titel}\nBeskrivelse: {TurSkabelon.Beskrivelse}");

        foreach (var dagSkabelon in TurSkabelon.DagSkabeloner)
        {
            Console.WriteLine($"Dag: {dagSkabelon.Titel}");
        }
    }

    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {

    }

    private void OnDagSkabelonRowSelect(DagSkabelon dagSkabelon)
    {
        ObservableDagSkabeloner.Add(dagSkabelon);

        showAddDagSkabelon = !showAddDagSkabelon;
    }

    private void OnDagSkabelonDelete(DagSkabelon dagSkabelon)
    {
        ObservableDagSkabeloner.Remove(dagSkabelon);
    }
}
